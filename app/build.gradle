import com.app.plugin.MyTestPlugin

apply plugin: 'com.android.application'
apply plugin: MyTestPlugin

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.javassist"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //更新gradle之后出现的错误？？？
    //必须之后？？？？Cannot create variant 'android-manifest-metadata' after configuration 。。。
    task output {
        dependsOn 'assembleDebug'
        doLast {
            applicationVariants.all { variant ->
                def dexTask = project.tasks.findByName("transformClassesWithDexForDebug")
                def preDexTask = project.tasks.findByName("transformClassesWithPreDexForDebug")
                if (preDexTask) {
                    project.logger.error "======preDexTask======"
                    preDexTask.inputs.files.files.each { file ->
                        project.logger.error "inputs =$file.absolutePath"
                    }

                    preDexTask.outputs.files.files.each { file ->
                        project.logger.error "outputs =$file.absolutePath"
                    }
                }
                if (dexTask) {
                    project.logger.error "======dexTask======"
                    dexTask.inputs.files.files.each { file ->
                        project.logger.error "inputs =$file.absolutePath"
                    }

                    dexTask.outputs.files.files.each { file ->
                        project.logger.error "outputs =$file.absolutePath"
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(':hotpatch')
    implementation project(path: ':hack')
}

